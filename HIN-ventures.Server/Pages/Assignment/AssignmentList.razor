@page "/assignments"
@using HIN_ventures.Models
@using HIN_ventures.Business.Repositories.IRepositories
@inject IAssignmentRepository _assignmentRepository
@inject NavigationManager _navigationManager

<div class="mt-2">
    <div class="ml-1 mb-5">
        <MudText Typo="Typo.h4" Align="Align.Center">Assignments</MudText>
        <MudDivider DividerType="DividerType.FullWidth" Class="my-5"/>
    </div>
    <div class="col-12">
        <MudGrid Spacing="2" Justify="Justify.Center">
            @if (Assignments.Any())
            {
                foreach (var assignment in Assignments)
                {
                    <MudItem>
                        <MudCard>
                            <MudCardContent>
                                <MudText Typo="Typo.subtitle2">@assignment.Title</MudText>
                                @if (assignment.Description.Length > 50)
                                {
                                    <MudText Typo="Typo.body2">@assignment.Description[..50]</MudText>
                                }
                            </MudCardContent>
                            <MudCardActions>
                                <NavLink class="nav-link" href="@($"assignment/details/{assignment.Id}")">
                                    <span class="oi oi-list-rich" aria-hidden="true"></span> Details
                                </NavLink>
                                <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Edit"
                                           Color="Color.Info" Link="@($"assignment/edit/{assignment.Id}")">Edit</MudButton>

                                <MudButton Variant="Variant.Text" StartIcon="@Icons.Material.Filled.Delete"
                                           Color="Color.Error" Link="@($"assignment/delete/{assignment.Id}")">Delete</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            }
            else
            {
                <div>No records found</div>
            }
        </MudGrid>
    </div>
    <MudFab Link="/assignment/create" Class="fab-button" Color="Color.Primary" Icon="@Icons.Material.Filled.Add" aria-label="add" />
</div>


@code {
    private IEnumerable<AssignmentDto> Assignments { get; set; } = new List<AssignmentDto>();

    protected override void OnInitialized()
    {
        Assignments = _assignmentRepository.GetAllAssignments();
        StateHasChanged();
    }

    protected override async Task OnParametersSetAsync()
    {
        await OnInitializedAsync();
        StateHasChanged();
    }

    private void GoToDetails(int Id)
    {
        _navigationManager.NavigateTo($"assignment/details/{Id}");
        StateHasChanged();
    }

}